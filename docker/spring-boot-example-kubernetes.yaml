apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  type: NodePort
  selector:
    app: spring-boot-example
    tier: db
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
      nodePort: 30432
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-example-web
spec:
  type: NodePort
  selector:
    app: spring-boot-example
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web
      nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: spring-boot-example
      tier: db
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-boot-example
        tier: db
    spec:
      restartPolicy: Always
      volumes:
        - name: postgres-storage
          hostPath:
            path: /local-path-of-postgres-storage
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "exampledb"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          args: ["-c", "max_connections=1000"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-example-web
spec:
  selector:
    matchLabels:
      app: spring-boot-example-web
      tier: web
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-boot-example-web
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: spring-boot-example-web
        image: spring-boot-example:1.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: 5432
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: exampledb
        - name: JAVA_OPTS
          value: "-server -XX:+UseConcMarkSweepGC -Xms1024m -XX:ParallelGCThreads=3"
        ports:
        - name: web
          containerPort: 8080
        args: []
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10